# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
  - { resource: 'openconext/parameters.yaml' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $client: '@app_http_client'
            $logger: '@surfnet_gssp.logger'
            $stateHandler: '@surfnet_gssp.state_handler.service'
            $supportUrl: '%support_url%'
            $locales: '%locales%'
            $tiqrConfiguration: '%tiqr_library_options%'
            $appSecret: '%app_secret%'
            $sessionOptions: '%session.storage.options%'
            $correlationIdSalt: '%correlation_id_salt%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Surfnet\Tiqr\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    Surfnet\Tiqr\Controller\:
        tags: [ 'controller.service_arguments' ]
        resource: '../src/Controller/'
        autowire: true
        autoconfigure: true

  # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Component\DependencyInjection\Container:
      alias: 'service_container'

    Surfnet\Tiqr\Tiqr\Legacy\TiqrService:
      factory: ['Surfnet\Tiqr\Tiqr\TiqrFactory', 'createService']

    Surfnet\Tiqr\Tiqr\Legacy\TiqrUserRepository:
      factory: ['Surfnet\Tiqr\Tiqr\TiqrFactory', 'createUserRepository']

    Surfnet\Tiqr\Tiqr\TiqrUserRepositoryInterface:
      alias: Surfnet\Tiqr\Tiqr\Legacy\TiqrUserRepository

    surfnet_saml.saml2.bridge_container:
      class: Surfnet\SamlBundle\SAML2\BridgeContainer
      arguments:
          - '@logger'

    Surfnet\Tiqr\Service\UserAgentMatcher:
      bind:
        $pattern: '%mobile_app_user_agent_pattern%'

    Surfnet\Tiqr\Controller\ExceptionController:
      arguments:
        $errorPageHelper: '@Surfnet\Tiqr\Service\ErrorPageHelper'
