# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: nl

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $client: '@app_http_client'
            $logger: '@surfnet_gssp.logger'
            $stateHandler: '@surfnet_gssp.state_handler.service'
            $supportUrl: '%support_url%'
            $locales: '%locales%'
            $tiqrConfiguration: '%tiqr_library_options%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Tiqr\Legacy\TiqrService:
      public: true
      factory: 'App\Tiqr\TiqrFactory:createService'

    App\Tiqr\Legacy\TiqrUserRepository:
      public: true
      factory: 'App\Tiqr\TiqrFactory:createUserRepository'

    App\Tiqr\TiqrUserRepositoryInterface:
      public: true
      alias: App\Tiqr\Legacy\TiqrUserRepository

    surfnet_saml.saml2.bridge_container:
      public: true
      class: Surfnet\SamlBundle\SAML2\BridgeContainer
      arguments:
          - '@logger'

    App\Service\UserAgentMatcher:
      bind:
        $pattern: '%mobile_app_user_agent_pattern%'

    App\Controller\ExceptionController:
        public: true
        calls:
          - method: setContainer
            arguments:
              - '@service_container'
        tags:
            # It is very important this listener has a priority higher than the default exception listener,
            # and ideally lower than the profiler listener (so exceptions show up in the toolbar).
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: -128 }
