// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthenticationPageService When push notification response is handled Should do nothing when push notification succeeded: notification succeeded 1`] = `
Object {
  "authenticationPageService": AuthenticationPageService {
    "allComponents": ComponentCollection {
      "components": Array [
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
      ],
    },
    "challengeExpiredComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "notificationClient": Object {
      "send": [Function],
    },
    "notificationErrorComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "notificationErrorHandler": [Function],
    "notificationReceivedHandler": [Function],
    "otpFormComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "qrComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "spinnerComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "statusErrorComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "statusErrorHandler": [Function],
    "statusPollingService": Object {
      "stop": [MockFunction],
      "waitAndRequestStatus": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
    },
    "statusReceivedHandler": [Function],
  },
  "challengeExpiredComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "notificationClient": Object {
    "send": [Function],
  },
  "notificationErrorComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "otpFormComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "pollingService": Object {
    "stop": [MockFunction],
    "waitAndRequestStatus": [MockFunction] {
      "calls": Array [
        Array [
          [Function],
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    },
  },
  "qrComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "spinnerComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "statusErrorComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
}
`;

exports[`AuthenticationPageService When push notification response is handled Should do nothing when push notification succeeded: notification succeeded 2`] = `
Object {
  "authenticationPageService": AuthenticationPageService {
    "allComponents": ComponentCollection {
      "components": Array [
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
        Object {
          "hide": [Function],
          "isVisible": [Function],
          "show": [Function],
        },
      ],
    },
    "challengeExpiredComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "notificationClient": Object {
      "send": [Function],
    },
    "notificationErrorComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "notificationErrorHandler": [Function],
    "notificationReceivedHandler": [Function],
    "otpFormComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "qrComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "spinnerComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "statusErrorComponent": Object {
      "hide": [Function],
      "isVisible": [Function],
      "show": [Function],
    },
    "statusErrorHandler": [Function],
    "statusPollingService": Object {
      "stop": [MockFunction],
      "waitAndRequestStatus": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      },
    },
    "statusReceivedHandler": [Function],
  },
  "challengeExpiredComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "notificationClient": Object {
    "send": [Function],
  },
  "notificationErrorComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "otpFormComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "pollingService": Object {
    "stop": [MockFunction],
    "waitAndRequestStatus": [MockFunction] {
      "calls": Array [
        Array [
          [Function],
          [Function],
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    },
  },
  "qrComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "spinnerComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
  "statusErrorComponent": Object {
    "hide": [Function],
    "isVisible": [Function],
    "show": [Function],
  },
}
`;
